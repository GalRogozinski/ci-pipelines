steps:
  - name: "coding style check"
    command: cd /workdir && ./tools/ci_format_check cclient
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "buildifier check"
    command: cd /workdir && ./tools/ci_buildifier_check
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "static analysis check"
    command: cd /workdir && cppcheck --force --error-exitcode=1 -q cclient
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - wait

  - name: "TE=1 bazel test opt ASAN"
    command: cd /workdir && bazel test --build_tests_only -c opt --test_output=all --config asan --define trit_encoding=1 //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        capabilities:
          - SYS_PTRACE
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "TE=1 bazel test dbg ASAN"
    command: cd /workdir && bazel test --build_tests_only -c dbg --test_output=all --config asan --define trit_encoding=1 //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        capabilities:
          - SYS_PTRACE
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "TE=1 bazel test opt TSAN"
    command: cd /workdir && bazel test --build_tests_only -c opt --test_output=all --config tsan --define trit_encoding=1 //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "TE=1 bazel test dbg TSAN"
    command: cd /workdir && bazel test --build_tests_only -c dbg --test_output=all --config tsan --define trit_encoding=1 //...
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "TE=1 bazel test opt UBSAN"
    command: cd /workdir && bazel test --build_tests_only -c opt --test_output=all --config ubsan --define trit_encoding=1 //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "TE=1 bazel test dbg UBSAN"
    command: cd /workdir && bazel test --build_tests_only -c dbg --test_output=all --config ubsan --define trit_encoding=1 //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - wait

  - name: "TE=3 bazel test opt"
    command: cd /workdir && bazel test --build_tests_only -c opt --test_output=all --define trit_encoding=3 //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "TE=3 bazel test debug"
    command: cd /workdir && bazel test --build_tests_only -c dbg --test_output=all --define trit_encoding=3 //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "TE=4 bazel test opt"
    command: cd /workdir && bazel test --build_tests_only -c opt --test_output=all --define trit_encoding=4 //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "TE=4 bazel test debug"
    command: cd /workdir && bazel test --build_tests_only -c dbg --test_output=all --define trit_encoding=4 //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "TE=5 bazel test opt"
    command: cd /workdir && bazel test --build_tests_only -c opt --test_output=all --define trit_encoding=5 //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "TE=5 bazel test debug"
    command: cd /workdir && bazel test --build_tests_only -c dbg --test_output=all --define trit_encoding=5 //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "CMake script"
    command: cd /workdir && mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=. -DCCLIENT_TEST=ON .. && make -j16 && make test
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - wait

  - name: "bazel test bootlin x86_64 toolchains"
    command: cd /workdir && bazel test --build_tests_only --test_output=all --config=bootlin_x86_64_core_i7  //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]

  - name: "bazel test bootlin i686 toolchains"
    command: cd /workdir && bazel test --build_tests_only --test_output=all --config=bootlin_i686 //... 
    agents:
      queue: dev
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v2.0.0:
        image: "iotacafe/iota-buildenv"
        always-pull: true
        volumes:
          - /conf:/conf
          - /cache:/cache
          - .:/workdir
        shell: ["/bin/bash", "-e", "-c"]
