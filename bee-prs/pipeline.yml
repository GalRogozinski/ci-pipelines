steps:
  - label: ":hammer_and_wrench: Build for Linux platform - Setting up Rust environment"
    command:
      - set -e
      - mkdir /cache/rust
      - apt -qq update && apt -qq install curl -y 
      - curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain none
      - export PATH=\$PATH:\$HOME/.cargo/bin
      - rustup toolchain install \$RUSTUP_TOOLCHAIN
      - rustup default \$RUSTUP_TOOLCHAIN
      - rustup toolchain list
      - rustup component add rustfmt
      - cargo fmt --version
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v3.2.0:
        image: "ubuntu:16.04"
        always-pull: false
        environment:
          - CARGO_HOME=/cache/rust/.cargo
          - RUSTUP_HOME=/cache/rust/.rustup
          - PATH=\$PATH:/cache/rust/.cargo/bin
          - RUSTUP_TOOLCHAIN=nightly
        volumes:
          - /cache-bee-$BUILDKITE_BUILD_ID:/cache
    agents:
      queue: ops

  - label: ":hammer_and_wrench: Build for Linux platform - Running fmt check"
    command:
      - set -e
      - cargo build
      - cargo test
      - cargo fmt --all -- --check
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v3.2.0:
        image: "ubuntu:16.04"
        always-pull: false
        environment:
          - CARGO_HOME=/cache/rust/.cargo
          - RUSTUP_HOME=/cache/rust/.rustup
          - PATH=\$PATH:/cache/rust/.cargo/bin
        volumes:
          - /cache-bee-$BUILDKITE_BUILD_ID:/cache
    agents:
      queue: ops

  - label: ":hammer_and_wrench: Build for macOS platform"
    command:
      - set -e
      - curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain none
      - export PATH=\$PATH:\$HOME/.cargo/bin
      - rustup toolchain install \$RUSTUP_TOOLCHAIN
      - rustup default \$RUSTUP_TOOLCHAIN
      - rustup toolchain list
      - cargo build
      - cargo test
    env: 
      RUSTUP_TOOLCHAIN: nightly
    agents:
      queue: mac

  - label: ":hammer_and_wrench: Build for Windows platform"
    command:
      - curl -sSf -o rustup-init.exe https://win.rustup.rs
      - rustup-init.exe -y --default-toolchain none
      - set PATH=%PATH%;%USERPROFILE%\.cargo\bin
      - rustup toolchain install %RUSTUP_TOOLCHAIN%
      - rustup default %RUSTUP_TOOLCHAIN%
      - rustup toolchain list
      - cargo build
      - cargo test
    env:
      RUSTUP_TOOLCHAIN: nightly
    agents:
      queue: ec2-win-t2medium
