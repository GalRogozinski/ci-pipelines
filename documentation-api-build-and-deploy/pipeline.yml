steps:
  - name: zeit-build-and-deploy
    command: 
      - |
        npm i -g --unsafe-perm now
        cp ci-pipelines/$BUILDKITE_PIPELINE_SLUG/api/src/data/config.json api/src/data/config.json
        cp ci-pipelines/$BUILDKITE_PIPELINE_SLUG/now.json api/now.json
        cd api
        sed -i.bak s#DOCS-AWS-ACCESS-KEY-ID#\$DOCS_AWS_ACCESS_KEY_ID#g src/data/config.json
        sed -i.bak s#DOCS-AWS-SECRET-ACCESS-KEY#\$DOCS_AWS_SECRET_ACCESS_KEY#g src/data/config.json
        now --platform-version 1 --token \$ZEIT_TOKEN --team iota deploy --force --docker -n documentation-api -m BK_JOB_ID=$BUILDKITE_JOB_ID
        NOW_SH_DEPLOYMENT_ID=$(now --platform-version 1 --token \$ZEIT_TOKEN --team iota ls -m BK_JOB_ID=$BUILDKITE_JOB_ID | grep documentation-api | awk {'print \$2'}
        now --platform-version 1 --token \$ZEIT_TOKEN --team iota alias $NOW_SH_DEPLOYMENT_ID documentation-api.iota.works
    plugins:
       https://github.com/iotaledger/docker-buildkite-plugin#release-v1.4.0:
         image: "node:8.12-stretch"
         shell: "/bin/sh -e -c"
         environment:
          - ZEIT_TOKEN
          - DOCS_AWS_ACCESS_KEY_ID
          - DOCS_AWS_SECRET_ACCESS_KEY
    agents:
      queue: ops
