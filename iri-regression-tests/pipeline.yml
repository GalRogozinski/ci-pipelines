steps:
  - name: "Cleanup /cache mount"
    command:
      - rm -rf /cache/*
    agents:
      queue: ops
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v1.4.0:
        image: "busybox"
        shell: /bin/sh -c
        mounts:
          - /cache-iri-regression-tests-$BUILDKITE_BUILD_ID:/cache
  - wait
  - name: "Clone IRI"
    command:
      - |
        apk add git
        if [ ! -z "$IRI_BUILDKITE_PULL_REQUEST_REPO" ]; then
          git clone "$IRI_BUILDKITE_PULL_REQUEST_REPO" /cache/iri
        else
          git clone git://github.com/iotaledger/iri.git /cache/iri
        fi
    agents:
      queue: ops
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v1.4.0:
        image: "alpine"
        shell: /bin/sh -c
        mounts:
          - /cache-iri-regression-tests-$BUILDKITE_BUILD_ID:/cache
  - name: "Clone TIAB"
    command:
      - clone --depth 1 https://github.com/iotaledger/tiab.git /cache/tiab
    agents:
      queue: ops
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v1.4.0:
        image: "alpine/git"
        shell: false
        mounts:
          - /cache-iri-regression-tests-$BUILDKITE_BUILD_ID:/cache
  - wait
  - name: "Checkout IRI revision"
    command:
      - apk add git
      - cd /cache/iri
      - git checkout $IRI_GIT_COMMIT
    agents:
      queue: ops
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v1.4.0:
        image: "alpine"
        shell: /bin/sh -c
        mounts:
          - /cache-iri-regression-tests-$BUILDKITE_BUILD_ID:/cache
  - wait
  - name: "Install TIAB dependencies"
    command:
      - pip install virtualenv
      - cd /cache/tiab
      - virtualenv venv
      - source venv/bin/activate
      - pip install -r requirements.txt
    agents:
      queue: ops
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v1.4.0:
        image: "python:2-alpine"
        shell: /bin/sh -c
        mounts:
          - /cache-iri-regression-tests-$BUILDKITE_BUILD_ID:/cache
  - name: "Install iri-regression dependencies"
    command:
      - apk add gcc musl-dev libffi-dev openssl-dev
      - pip install virtualenv
      - virtualenv /cache/iri-regression-venv
      - source /cache/iri-regression-venv/bin/activate
      - cd /cache/iri/python-regression
      - pip install -e .
    agents:
      queue: ops
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v1.4.0:
        image: "python:2-alpine"
        shell: /bin/sh -c
        mounts:
          - /cache-iri-regression-tests-$BUILDKITE_BUILD_ID:/cache
  - wait
  - name: "Run TIAB against config.yml files"
    command:
      - cd /cache/tiab
      - source venv/bin/activate
      - cd /cache/iri/python-regression
      - |
        ERROR=0
        for machine_dir in tests/features/machine?; do
          mkdir -p /cache/\$machine_dir/
          python /cache/tiab/create_cluster.py -i iotacafe/iri-dev:$IRI_BUILD_NUMBER -t $BUILDKITE_BUILD_ID -c \$machine_dir/config.yml -o /cache/\$machine_dir/output.yml -k /conf/kube/kube.config -n buildkite -d
          if [ \$? -ne 0 ]; then
            ERROR=1
            python /workdir/ci-pipelines/iri-regression-tests/print-logs.py /cache/\$machine_dir/output.yml
          fi
        if [ \$ERROR -ne 0 ]; then
          exit 1
        fi
        done
    agents:
      queue: ops
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v1.4.0:
        image: "python:2-alpine"
        shell: /bin/sh -c
        mounts:
          - /cache-iri-regression-tests-$BUILDKITE_BUILD_ID:/cache
          - /conf:/conf:ro
  - wait
  - name: "Generate dynamic Aloe steps"
    command: 
      - cd iri-regression-tests 
      - aloe-steps-create.sh > /cache/aloe-steps.yml
      - buildkite-agent pipeline upload < /cache/aloe-steps.yml
    agents:
      queue: ops
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v1.4.0:
        image: "busybox"
        shell: /bin/sh -c
        mount-buildkite-agent: true
        mounts:
          - /cache-iri-regression-tests-$BUILDKITE_BUILD_ID:/cache
          - /etc/ssl/certs:/etc/ssl/certs:ro
  - wait: ~
    continue_on_failure: true
  - name: "Teardown cluster"
    command:
      - cd /cache/tiab
      - source venv/bin/activate
      - if [ -z "$KEEP_CLUSTER" ]; then python teardown_cluster.py -t $BUILDKITE_BUILD_ID -k /conf/kube/kube.config -n buildkite; fi
    agents:
      queue: ops
    plugins:
      https://github.com/iotaledger/docker-buildkite-plugin#release-v1.4.0:
        image: "python:2-alpine"
        shell: /bin/sh -c
        mounts:
          - /cache-iri-regression-tests-$BUILDKITE_BUILD_ID:/cache
          - /conf:/conf:ro
