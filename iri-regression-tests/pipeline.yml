steps:
  - name: "Cleanup /cache mount and remove k8s pods older than 1 day"
    command:
      - rm -rf /cache/*
      - for i in `kubectl get pods -n buildkite -o json | jq -r ".items[] | select ( .status.startTime | fromdateiso8601 < $$(date +%s -D '-1 days')) | .metadata.name"`; do echo kubectl -n buildkite delete po $i ; done
    agents:
      queue: ops
    plugins:
      docker#v1.4.0:
        image: "busybox"
        shell: /bin/sh -c
        mounts:
          - /cache-iri-regression-tests:/cache
  - wait
  - name: "Checkout TIAB"
    command:
      - clone --depth 1 https://github.com/iotaledger/tiab.git /cache/tiab
    agents:
      queue: ops
    plugins:
      docker#v1.4.0:
        image: "alpine/git"
        shell: false
        mounts:
          - /cache-iri-regression-tests:/cache
  - wait
  - name: "Install TIAB dependencies"
    command:
      - pip install virtualenv
      - cd /cache/tiab
      - virtualenv venv
      - source venv/bin/activate
      - pip install -r requirements.txt
    agents:
      queue: ops
    plugins:
      docker#v1.4.0:
        image: "python:2-alpine"
        shell: /bin/sh -c
        mounts:
          - /cache-iri-regression-tests:/cache
  - name: "Install iri-regression dependencies"
    command:
      - apk add gcc musl-dev libffi-dev openssl-dev
      - pip install virtualenv
      - virtualenv /cache/iri-regression-venv
      - source /cache/iri-regression-venv/bin/activate
      - cd PythonRegression
      - pip install -e .
    agents:
      queue: ops
    plugins:
      docker#v1.4.0:
        image: "python:2-alpine"
        shell: /bin/sh -c
        mounts:
          - /cache-iri-regression-tests:/cache
  - wait
  - name: "Run TIAB against config.yml files"
    command:
      - cd /cache/tiab
      - source venv/bin/activate
      - cd /workdir/PythonRegression
      - |
        ERROR=0
        for machine_dir in tests/features/machine?; do
          mkdir -p /cache/\$machine_dir/
          python /cache/tiab/create_cluster.py -i iotacafe/iri-dev:$IRI_BUILD_NUMBER -t $BUILDKITE_BUILD_ID -c \$machine_dir/config.yml -o /cache/\$machine_dir/output.yml -k /conf/kube/kube.config -n buildkite -d
          if [ \$? -ne 0 ]; then
            ERROR=1
            python /workdir/ci-pipelines/iri-regression-tests/print-logs.py /cache/\$machine_dir/output.yml
          fi
        if [ \$ERROR -ne 0 ]; then
          exit 1
        fi
        done
    agents:
      queue: ops
    plugins:
      docker#v1.4.0:
        image: "python:2-alpine"
        shell: /bin/sh -c
        mounts:
          - /cache-iri-regression-tests:/cache
          - /conf:/conf:ro
  - wait
  - name: "Generate dynamic Aloe steps"
    command: 
      - cd ci-pipelines/iri-regression-tests/
      - ./aloe-steps-create.sh > /cache/aloe-steps.yml
      - buildkite-agent pipeline upload < /cache/aloe-steps.yml
    agents:
      queue: ops
    plugins:
      docker#v1.4.0:
        image: "busybox"
        shell: /bin/sh -c
        mount-buildkite-agent: true
        mounts:
          - /cache-iri-regression-tests:/cache
          - /etc/ssl/certs:/etc/ssl/certs:ro
  - wait: ~
    continue_on_failure: true
  - name: "Teardown cluster"
    command:
      - cd /cache/tiab
      - source venv/bin/activate
      - if [ -z "$KEEP_CLUSTER" ]; then python teardown_cluster.py -t $BUILDKITE_BUILD_ID -k /conf/kube/kube.config -n buildkite; fi
    agents:
      queue: ops
    plugins:
      docker#v1.4.0:
        image: "python:2-alpine"
        shell: /bin/sh -c
        mounts:
          - /cache-iri-regression-tests:/cache
          - /conf:/conf:ro
